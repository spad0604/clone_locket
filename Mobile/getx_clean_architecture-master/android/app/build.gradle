def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException('Flutter SDK not found. Define location with flutter.sdk in the local.properties file.')
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 34
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    // TODO: recheck remove

    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName "${flutterVersionName}"
    }

    signingConfigs {
        // debug {
        //     keyAlias 'androiddebugkey'
        //     keyPassword 'android'
        //     storePassword 'android'
        //     storeFile file('../keystore/debug/debug.keystore')
        // }
        release {
            keyAlias 'jbbaseUploadKey'
            keyPassword 'jbbaserelease2022'
            storePassword 'jbbaserelease2022'
            storeFile file('../keystore/release/release.jks')
        }
    }

    buildTypes {
        ndkVersion '26.2.11394342'
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
        }
        release {
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ndk {
                debugSymbolLevel 'FULL'
            }
        }
    }

    flavorDimensions 'app'
    
    productFlavors {
        qa {
            dimension 'app'
            applicationId 'com.jbbase.qa'
            resValue 'string', 'app_name', '[QA]JBBase'
        }

        stg {
            dimension 'app'
            applicationId 'com.jbbase.stg'
            resValue 'string', 'app_name', '[STG]JBBase'
        }

        prod {
            dimension 'app'
            applicationId 'com.jbbase.prod'
            resValue 'string', 'app_name', 'JBBase'
        }
    }
    lint {
        checkReleaseBuilds false
        disable 'InvalidPackage'
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:30.4.1')

    // Declare the dependencies for the Firebase Cloud Messaging and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-core:21.0.0' 
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-analytics'
}

apply plugin: 'com.google.firebase.crashlytics'